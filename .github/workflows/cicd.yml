name: Django testing and deployment

on:
  push:
    branches: [master]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD}}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST}}

    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}

        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Проверяем репозиторий на наличие изменений
        uses: actions/checkout@v3

      - name: Установка python
        uses: actions/setup-python@v2
        with:
          oython-version: 3.9

      - name: Установка библиотек
        run: pip install - r requirements.txt

      - name: Линтинг
        run: flake8 logistic/ --exclude=logistic/migrations

      - name: Тестирование
        run: python manage.py test
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ env.POSTGRES_HOST }}

      - name: Деплой
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: expect /home/alexnor/projects/docker-compose/pull.exp
